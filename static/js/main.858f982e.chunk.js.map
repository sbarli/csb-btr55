{"version":3,"sources":["utils/get-random-integer.js","utils/get-icebreakers.js","data/icebreakers.js","utils/shuffle-array.js","utils/random-list-groups.js","components/icebreakers-form/fields/Input.js","styles/colors.js","styles/button.js","components/icebreakers-form/fields/SubmitButton.js","components/icebreakers-form/IcebreakersForm.js","components/icebreakers-display/components/GetNewQuestionsButton.js","components/icebreakers-display/components/IcebreakerGroup.js","components/icebreakers-display/components/IcebreakerGroups.js","components/icebreakers-display/IcebreakersDisplay.js","App.styled.js","App.js","index.js"],"names":["getRandomIntegerInclusive","min","max","Math","ceil","floor","random","getIcebreakers","questionsPerGroup","allowLessThan","allowMoreThan","selectOneGroup","icebreakerGroups","randomListGroups","icebreakers","length","module","exports","shuffle","array","temporaryValue","randomIndex","currentIndex","getBalancedRandomlySelectedGroupIdx","groups","perGroup","availableGroups","filter","group","addEachToRandomGroup","items","push","slice","initList","randomOrderedList","createGroupsFromRandomList","list","haveEnough","newGroup","typeIsInputField","type","InputWrapper","styled","div","Label","label","p","$inputType","StyledInput","input","Description","ErrorText","Input","register","inputName","required","defaultValue","error","description","props","colors","smallButton","css","largeButton","sharedButtonStyles","SubmitButton","FormWrapper","IcebreakersForm","onSubmit","useForm","defaultValues","handleSubmit","errors","formState","ButtonContainer","StyledButton","button","GetNewQuestionsButton","startOver","onClick","IcebreakerGroupWrapper","IcebreakerGroupHeader","h3","QuestionList","ol","Question","li","IcebreakerGroup","groupNumber","showGroupNumber","map","question","idx","IcebreakerGroups","DisplayWrapper","IcebreakersDisplay","isMultipleGroups","Array","isArray","IcebreakersToDisplay","AppWrapper","AppHeader","h1","ContentWrapper","App","useState","setIcebreakers","useCallback","data","selectedIcebreakers","resetIcebreakers","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.858f982e.chunk.js","sourcesContent":["// min & max are both INCLUSIVE\nexport const getRandomIntegerInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * EXAMPLES\n */\n// console.log('getRandomIntegerInclusive(0, 1)',getRandomIntegerInclusive(0, 1));\n","import { icebreakers } from '../data/icebreakers';\nimport { randomListGroups } from './random-list-groups';\nimport { getRandomIntegerInclusive } from './get-random-integer';\n\nexport const getIcebreakers = ({\n  questionsPerGroup,\n  allowLessThan,\n  allowMoreThan,\n  selectOneGroup\n}) => {\n  const icebreakerGroups = randomListGroups(\n    icebreakers,\n    questionsPerGroup,\n    allowLessThan,\n    allowMoreThan\n  );\n  if (selectOneGroup) {\n    const randomlySelectedGroup = getRandomIntegerInclusive(\n      0,\n      icebreakerGroups.length - 1\n    );\n    const randomIcebreakers = icebreakerGroups[randomlySelectedGroup];\n    return randomIcebreakers;\n  }\n  return icebreakerGroups;\n};\n\nmodule.exports = { getIcebreakers };\n","export const icebreakers = [\n  \"If you did not have to sleep, how would you spend the extra 8 hours?\",\n  \"What's one rule your parents or guardians enforced when you were a kid?\",\n  \"What's the most useful item you've purchased this year?\",\n  \"What is the most used emoji on your phone right now?\",\n  \"Do you work better with or without music? What are you listening to while you work?\",\n  \"What sport would you compete in if you were in the Olympics?\",\n  \"What was your first job?\",\n  \"You can have any fictional character as your imaginary friend, who do you choose and why?\",\n  \"What's your favorite tradition or holiday?\",\n  \"What do you plan on doing once you retire?\",\n  \"Would you rather mentally or physically never age?\",\n  \"When did you first notice that you were already an adult?\",\n  \"What fictional world or place would you like to visit? (ex. Hogwarts, Narnia, Star Wars galaxy)\",\n  \"If you had a time machine, would go back in time or into the future?\",\n  \"If you could have someone follow you around all the time, like a personal assistant, what would you have them do?\",\n  \"Have you ever been mistaken for someone famous?\",\n  \"What is the strangest gift you have ever received?\",\n  \"Which of Snow White's seven dwarfs describes you best (Bashful, Doc, Dopey, Grumpy, Happy, Sleepy or Sneezy)?\",\n  \"If you could give a piece of advice to your younger self, what would it be?\",\n  \"If you could be in the Guiness book of world records, what record-breaking feat would you attempt?\",\n  \"What's a weird fact you happen to know?\",\n  \"What's your best idea for a reality TV show?\",\n  \"Which celebrity do you shamelessly follow in the news?\",\n  \"What's the best knock-knock joke you know?\",\n  \"What interesting skill do you want to learn?\",\n  \"What was the worst haircut you ever had?\",\n  \"If you could bring back any fashion trend what would it be?\",\n  \"You have your own late night talk show, who do you invite as your first guest?\",\n  \"You have to sing karaoke, what song do you pick?\",\n  \"The zombie apocalypse is coming, who are 3 people you want on your team? (real or fictional)\",\n  \"What was the worst haircut you ever had?\",\n  \"If you were a wrestler what would be your entrance theme song?\",\n  \"You have your own late night talk show, who do you invite as your first guest?\",\n  \"If aliens landed on earth tomorrow and offered to take you home with them, would you go?\",\n  \"What is the most challenging job you can think of?\",\n  \"A genie grants you three wishes but none of them can directly benefit you. What would those wishes be?\",\n  \"What are the best and worst purchases you've ever made?\",\n  \"What do you never leave the house without other than your phone, keys or wallet?\",\n  \"What is your favorite hobby?\",\n  \"What is your favorite thing to do by yourself?\",\n  \"What adventurous activities do you dream of trying someday?\",\n  \"What is something you hate doing? Why?\",\n  \"What is your favorite sport or physical activity?\",\n  \"Have you ever met a celebrity?\",\n  \"Have you ever won a contest?\",\n  \"Have you ever done any extreme sports like skydiving or bungee jumping?\",\n  \"Have you ever eaten a whole pizza by yourself?\",\n  \"Are there any specific animals you are afraid of? Why?\",\n  \"What song/album do you currently have on repeat?\",\n  \"What are 3 things you always have in your freezer?\",\n  \"What is your guilty pleasure tv show?\",\n  \"What's the most ridiculous thing your parents ever did to embarrass you?\",\n  \"If you had to delete all but 3 apps from your smartphone, which ones would you keep? (Three apps that have changed your life.)\",\n  \"When did you get your first cell phone? What kind was it?\",\n  \"If you had to choose between only having a cell phone or a car for the rest of your life, which would you choose?\",\n  \"If you had a time machine, would go back in time or into the future?\",\n  \"What is one important skill that you think everyone should have?\",\n  \"Have you ever been on a cruise? Where did you go?\",\n  \"If you could rename yourself, what name would you pick?\",\n  \"Who had the most influence on you growing up?\",\n  \"What's something you want to do in the next year that you've never done before?\",\n  \"Would You Rather Mentally Or Physically Never Age?\",\n  \"Would You Rather Be Able to Talk with the Animals or Speak All Foreign Languages?\",\n  \"If You Had Your Own Talk Show, Who Would Your First Three Guests Be?\",\n  \"What sport would you compete in if you were in the Olympics?\",\n  \"What was your first job?\",\n  \"You can have anyone fictional as your imaginary friend, who do you choose and why?\",\n  \"What was the worst job you ever had?\",\n  \"If you could choose any two famous people to have dinner with who would they be?\",\n  \"If you could be any animal in the world, what animal would you choose to be?\",\n  \"What's your favorite place of all the places you've travelled?\",\n  \"What Is The Best Gift Anyone's Ever Given To You?\",\n  \"What fictional world or place would you like to visit? (Hogwarts, Narnia, Star Wars galaxy)\",\n  \"If you were forced to be on a reality tv show, which one would it be?\",\n  \"What's the weirdest thing you've ever eaten?\",\n  \"What's something you are weirdly good at?\",\n  \"Do you fold your pizza?\",\n  \"What fictional family would you most like to join?\",\n  \"What is your go-to karaoke anthem?\",\n  \"Show us your phone background and tell the story behind why you picked this image.\"\n];\n","// shuffle an array into random order\nexport const shuffle = (array) => {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n","import { shuffle } from \"./shuffle-array\";\nimport { getRandomIntegerInclusive } from \"./get-random-integer\";\n\nconst getBalancedRandomlySelectedGroupIdx = (groups, perGroup) => {\n  const availableGroups = groups.filter((group) => group.length <= perGroup);\n  if (!availableGroups || !availableGroups.length)\n    return getBalancedRandomlySelectedGroupIdx(groups, perGroup + 1);\n  const randomlySelectedGroupIdx = getRandomIntegerInclusive(\n    0,\n    availableGroups.length - 1\n  );\n  return randomlySelectedGroupIdx;\n};\n\nconst addEachToRandomGroup = (items, groups, perGroup) => {\n  if (!items.length) {\n    return groups;\n  }\n  const randomlySelectedGroupIdx = getBalancedRandomlySelectedGroupIdx(\n    groups,\n    perGroup\n  );\n  groups[randomlySelectedGroupIdx].push(items[0]);\n  return addEachToRandomGroup(items.slice(1), groups, perGroup);\n};\n\nexport const randomListGroups = (\n  initList,\n  perGroup = 2,\n  allowLessThan = false,\n  allowMoreThan = true\n) => {\n  const randomOrderedList = shuffle([...initList]);\n  const createGroupsFromRandomList = (\n    list,\n    groups = [],\n    perGroup = 2,\n    allowLessThan = false,\n    allowMoreThan = true\n  ) => {\n    if (!list.length) return groups;\n    const haveEnough = perGroup < list.length;\n    if (!haveEnough) {\n      if (allowLessThan) {\n        return [...groups, [...list]];\n      }\n      if (allowMoreThan) {\n        return addEachToRandomGroup(list, groups, perGroup);\n      }\n      return groups;\n    }\n    const newGroup = list.slice(0, perGroup);\n    return createGroupsFromRandomList(\n      list.slice(perGroup),\n      [...groups, newGroup],\n      perGroup,\n      allowLessThan,\n      allowMoreThan\n    );\n  };\n  return createGroupsFromRandomList(\n    randomOrderedList,\n    [],\n    perGroup,\n    allowLessThan,\n    allowMoreThan\n  );\n};\n\n/**\n * EXAMPLES\n */\n// const myList = [\n//   'a',\n//   'b',\n//   'c',\n//   'd',\n//   'e',\n//   'f',\n//   'g',\n// ]\n// console.log('randomListGroups(myList) => [-,-] x 2, [-,-,-] x 1', JSON.stringify(randomListGroups(myList), null, 2))\n// console.log('randomListGroups(myList, 2, true) => [-,-] x 2, [-] x 1', JSON.stringify(randomListGroups(myList, 2, true), null, 2))\n// console.log('randomListGroups(myList, 2, false, false) => [-,-] x 2', JSON.stringify(randomListGroups(myList, 2, false, false), null, 2))\n","import styled from \"styled-components\";\n\nconst typeIsInputField = (type) => {\n  switch (type) {\n    case \"radio\":\n    case \"checkbox\":\n      return false;\n    default:\n      return true;\n  }\n};\n\nconst InputWrapper = styled.div`\n  margin: 1rem 0;\n`;\n\nconst Label = styled.label`\n  margin-left: ${(p) => (typeIsInputField(p.$inputType) ? \"0\" : \"5px\")};\n  margin-right: ${(p) => (typeIsInputField(p.$inputType) ? \"5px\" : \"0\")};\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n`;\n\nconst StyledInput = styled.input`\n  ${(p) => (typeIsInputField(p.type) ? \"width: 3rem;\" : \"\")}\n`;\n\nconst Description = styled.p`\n  margin-top: 0;\n  font-size: 0.9rem;\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  font-size: 0.9rem;\n`;\n\nexport const Input = ({\n  label = \"\",\n  register,\n  inputName,\n  required,\n  type = \"text\",\n  defaultValue = \"\",\n  error = null,\n  description,\n  ...props\n}) => (\n  <InputWrapper>\n    {type !== \"checkbox\" && <Label $inputType={type}>{label}</Label>}\n    <StyledInput\n      {...props}\n      type={type}\n      defaultValue={defaultValue}\n      {...register(inputName, { required })}\n    />\n    {type === \"checkbox\" && <Label $inputType={type}>{label}</Label>}\n    {error && error?.type === \"required\" && (\n      <ErrorText>This field is required</ErrorText>\n    )}\n    {description && <Description>{description}</Description>}\n  </InputWrapper>\n);\n","export const colors = {\n  SPACE_CADET: \"#2b2d42\",\n  CHESTNUT: \"#A24936\",\n  FLAME: \"#D36135\",\n  PERIWINKLE: \"#C5D1EB\",\n  AQUAMARINE: \"#69DC9E\"\n};\n","import { css } from \"styled-components\";\nimport { colors } from \"./colors\";\n\nexport const smallButton = css`\n  font-size: 1em;\n  padding: 0.25em 1em;\n`;\n\nexport const largeButton = css`\n  font-size: 1.05em;\n  padding: 0.5em 1.25em;\n`;\n\nexport const sharedButtonStyles = css`\n  background: ${colors.SPACE_CADET};\n  color: ${colors.PERIWINKLE};\n  border: 2px solid ${colors.SPACE_CADET};\n  border-radius: 3px;\n  box-shadow: none;\n`;\n","import styled from \"styled-components\";\nimport { smallButton, sharedButtonStyles } from \"../../../styles\";\n\nexport const SubmitButton = styled.input`\n  ${sharedButtonStyles}\n  ${smallButton}\n`;\n","import { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\n\nimport { Input } from \"./fields/Input\";\nimport { SubmitButton } from \"./fields/SubmitButton\";\n\nconst FormWrapper = styled.div`\n  max-width: 400px;\n  padding: 2rem;\n  background-color: white;\n  border: 1px solid white;\n  border-radius: 3px;\n`;\n\nexport default function IcebreakersForm({ onSubmit }) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      questionsPerGroup: 5,\n      selectOneGroup: true\n    }\n  });\n\n  return (\n    <FormWrapper>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          label=\"Questions Per Group\"\n          register={register}\n          inputName=\"questionsPerGroup\"\n          type=\"number\"\n          error={errors.questionsPerGroup}\n          required\n        />\n        <Input\n          label=\"Select One Group\"\n          register={register}\n          inputName=\"selectOneGroup\"\n          type=\"checkbox\"\n          error={errors.selectOneGroup}\n          description=\"If checked, will only return one group of questions\"\n        />\n        <Input\n          label=\"Allow Less\"\n          register={register}\n          inputName=\"allowLessThan\"\n          type=\"checkbox\"\n          error={errors.allowLessThan}\n          description=\"Allow less per group if not an even number to split\"\n        />\n        <Input\n          label=\"Allow More\"\n          register={register}\n          inputName=\"allowMoreThan\"\n          type=\"checkbox\"\n          error={errors.allowMoreThan}\n          description=\"Allow more per group if not an even number to split\"\n        />\n        <SubmitButton type=\"submit\" />\n      </form>\n    </FormWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { largeButton, sharedButtonStyles } from \"../../../styles\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled.button`\n  ${sharedButtonStyles}\n  ${largeButton}\n`;\n\nexport const GetNewQuestionsButton = ({ startOver }) => (\n  <ButtonContainer>\n    <StyledButton onClick={startOver}>Get New Questions</StyledButton>\n  </ButtonContainer>\n);\n","import styled from \"styled-components\";\n\nconst IcebreakerGroupWrapper = styled.div`\n  background-color: white;\n  border: 1px solid white;\n  border-radius: 3px;\n  max-width: 400px;\n  padding: 0 1rem;\n  margin: 2rem 0;\n\n  :first-child {\n    margin-top: 0;\n  }\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nconst IcebreakerGroupHeader = styled.h3``;\nconst QuestionList = styled.ol``;\nconst Question = styled.li``;\n\nexport const IcebreakerGroup = ({\n  icebreakers,\n  groupNumber,\n  showGroupNumber = true\n}) => (\n  <IcebreakerGroupWrapper>\n    {showGroupNumber && (\n      <IcebreakerGroupHeader>Group {groupNumber}</IcebreakerGroupHeader>\n    )}\n    <QuestionList>\n      {icebreakers.map((question, idx) => (\n        <Question key={idx}>{question}</Question>\n      ))}\n    </QuestionList>\n  </IcebreakerGroupWrapper>\n);\n","import { IcebreakerGroup } from \"./IcebreakerGroup\";\n\nexport const IcebreakerGroups = ({ icebreakerGroups }) => (\n  <div>\n    {icebreakerGroups.map((group, idx) => (\n      <IcebreakerGroup key={idx} icebreakers={group} groupNumber={idx + 1} />\n    ))}\n  </div>\n);\n","import styled from \"styled-components\";\n\nimport { colors } from \"../../styles/colors\";\nimport { GetNewQuestionsButton } from \"./components/GetNewQuestionsButton\";\nimport { IcebreakerGroup } from \"./components/IcebreakerGroup\";\nimport { IcebreakerGroups } from \"./components/IcebreakerGroups\";\n\nconst DisplayWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n  background-color: ${colors.AQUAMARINE};\n`;\n\nexport default function IcebreakersDisplay({ icebreakers, startOver }) {\n  if (!icebreakers || !icebreakers.length) {\n    return (\n      <div>\n        <p>No Icebreakers Found, try again!</p>\n        <GetNewQuestionsButton startOver={startOver} />\n      </div>\n    );\n  }\n\n  const isMultipleGroups = Array.isArray(icebreakers[0]);\n\n  const IcebreakersToDisplay = isMultipleGroups ? (\n    <IcebreakerGroups icebreakerGroups={icebreakers} />\n  ) : (\n    <IcebreakerGroup icebreakers={icebreakers} showGroupNumber={false} />\n  );\n\n  return (\n    <div>\n      <GetNewQuestionsButton startOver={startOver} />\n      <DisplayWrapper>{IcebreakersToDisplay}</DisplayWrapper>\n      {isMultipleGroups && <GetNewQuestionsButton startOver={startOver} />}\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colors } from \"./styles/colors\";\n\nexport const AppWrapper = styled.div``;\n\nexport const AppHeader = styled.h1`\n  text-align: center;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n  padding: 2rem;\n  background-color: ${colors.AQUAMARINE};\n`;\n","import { useCallback, useState } from \"react\";\nimport { getIcebreakers } from \"./utils/get-icebreakers\";\nimport IcebreakersForm from \"./components/icebreakers-form/IcebreakersForm\";\nimport IcebreakersDisplay from \"./components/icebreakers-display/IcebreakersDisplay\";\nimport { AppHeader, AppWrapper, ContentWrapper } from \"./App.styled\";\n\nexport default function App() {\n  const [icebreakers, setIcebreakers] = useState(null);\n\n  const onSubmit = useCallback((data) => {\n    const selectedIcebreakers = getIcebreakers({\n      questionsPerGroup: data.questionsPerGroup,\n      allowLessThan: data.allowLessThan,\n      allowMoreThan: data.allowMoreThan,\n      selectOneGroup: data.selectOneGroup\n    });\n    setIcebreakers(selectedIcebreakers);\n  }, []);\n\n  const resetIcebreakers = useCallback(() => setIcebreakers(null), []);\n\n  return (\n    <AppWrapper>\n      <AppHeader>Icebreakers</AppHeader>\n      <ContentWrapper>\n        {icebreakers ? (\n          <IcebreakersDisplay\n            icebreakers={icebreakers}\n            startOver={resetIcebreakers}\n          />\n        ) : (\n          <IcebreakersForm onSubmit={onSubmit} />\n        )}\n      </ContentWrapper>\n    </AppWrapper>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}